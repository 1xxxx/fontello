/*global window, nodeca*/

//= require_self
//= require_tree ./nodeca

var nodeca = window.nodeca = (function (nodeca) {
  'use strict';

  nodeca.config           = {};
  nodeca.config.fontomas  = <%- JSON.stringify(nodeca('config.fontomas')) %>

  nodeca.runtime          = {};
  nodeca.runtime.env      = "<%= nodeca('runtime.env') %>";
  nodeca.runtime.version  = "<%= nodeca('runtime.version') %>";

  (function (c) {
    var log = c.log || $.noop;

    nodeca.logger = {};

    _.each(['assert', 'error', 'info', 'debug'], function (level) {
      var logger = c[level]; // try to get console.<level>

      // we deal with IE6-7 where no console exist at all
      // or we deal with IE8 where console.log or whatever might be an object
      if (!_.isFunction(logger)) {
        logger = function () {
          log([level].concat(_.toArray(arguments)));
        };
      }

      // logger is now a function for sure, so we can safely bind a console
      // context, which is needed for Chrome
      nodeca.logger[level] = _.bind(logger, c);
    });
  }(window.console || {}));

  return nodeca;
}({}));

// vim: syntax=javascript
